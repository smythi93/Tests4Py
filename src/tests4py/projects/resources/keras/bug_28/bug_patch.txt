diff --git a/keras/preprocessing/sequence.py b/keras/preprocessing/sequence.py
index 03906c04..7bfe97a9 100644
--- a/keras/preprocessing/sequence.py
+++ b/keras/preprocessing/sequence.py
@@ -326,9 +326,15 @@ class TimeseriesGenerator(Sequence):
         self.reverse = reverse
         self.batch_size = batch_size
 
+        if self.start_index > self.end_index:
+            raise ValueError('`start_index+length=%i > end_index=%i` '
+                             'is disallowed, as no part of the sequence '
+                             'would be left to be used as current step.'
+                             % (self.start_index, self.end_index))
+
     def __len__(self):
         return int(np.ceil(
-            (self.end_index - self.start_index) /
+            (self.end_index - self.start_index + 1) /
             (self.batch_size * self.stride)))
 
     def _empty_batch(self, num_rows):
@@ -341,11 +347,11 @@ class TimeseriesGenerator(Sequence):
     def __getitem__(self, index):
         if self.shuffle:
             rows = np.random.randint(
-                self.start_index, self.end_index, size=self.batch_size)
+                self.start_index, self.end_index + 1, size=self.batch_size)
         else:
             i = self.start_index + self.batch_size * self.stride * index
             rows = np.arange(i, min(i + self.batch_size *
-                                    self.stride, self.end_index), self.stride)
+                                    self.stride, self.end_index + 1), self.stride)
 
         samples, targets = self._empty_batch(len(rows))
         for j, row in enumerate(rows):
