diff --git a/tqdm/_tqdm.py b/tqdm/_tqdm.py
index 04b2961..ab42ed8 100755
--- a/tqdm/_tqdm.py
+++ b/tqdm/_tqdm.py
@@ -853,7 +853,7 @@ class tqdm(object):
         return self.total if self.iterable is None else \
             (self.iterable.shape[0] if hasattr(self.iterable, "shape")
              else len(self.iterable) if hasattr(self.iterable, "__len__")
-             else self.total)
+             else getattr(self, "total", None))
 
     def __enter__(self):
         return self
diff --git a/tqdm/tests/tests_synchronisation.py b/tqdm/tests/tests_synchronisation.py
index 09da4ee..c3b8ae4 100644
--- a/tqdm/tests/tests_synchronisation.py
+++ b/tqdm/tests/tests_synchronisation.py
@@ -1,11 +1,11 @@
 from __future__ import division
-from tqdm import tqdm
-from tests_tqdm import with_setup, pretest, posttest, StringIO, closing
+from tqdm import tqdm, TMonitor
+from tests_tqdm import with_setup, pretest, posttest, SkipTest, \
+    StringIO, closing
 from tests_tqdm import DiscreteTimer, cpu_timify
 
 from time import sleep
 from threading import Event
-from tqdm import TMonitor
 
 
 class FakeSleep(object):
@@ -37,6 +37,10 @@ def make_create_fake_sleep_event(sleep):
     return create_fake_sleep_event
 
 
+def incr(x):
+    return x + 1
+
+
 @with_setup(pretest, posttest)
 def test_monitor_thread():
     """Test dummy monitoring thread"""
@@ -162,3 +166,16 @@ def test_monitoring_multi():
     # Check that class var monitor is deleted if no instance left
     tqdm.monitor_interval = 10
     assert tqdm.monitor is None
+
+
+@with_setup(pretest, posttest)
+def test_imap():
+    """Test multiprocessing.Pool"""
+    try:
+        from multiprocessing import Pool
+    except ImportError:
+        raise SkipTest
+
+    pool = Pool()
+    res = list(tqdm(pool.imap(incr, range(100)), disable=True))
+    assert res[-1] == 100
